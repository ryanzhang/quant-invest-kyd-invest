# Rest API
quarkus.http.auth.form.landing-page=/index.html
## DEV Override
%dev.quarkus.http.port=8088
# Datasource
quarkus.datasource.db-kind=postgresql
quarkus.datasource.username=user
quarkus.datasource.password=password
quarkus.datasource.jdbc.url=jdbc:postgresql://pg-quant-invest:5432/market?currentSchema=stock
quarkus.datasource.jdbc.max-size=10
# Flyway
quarkus.flyway.create-schemas=true
quarkus.flyway.schemas=stock
%dev.quarkus.flyway.schemas=STOCK
%test.quarkus.flyway.schemas=STOCK
quarkus.flyway.validate-on-migrate=true
quarkus.flyway.migrate=true

quarkus.flyway.baseline-on-migrate=true
quarkus.flyway.locations=db/migration,db/specific/postgresql
quarkus.flyway.migrate-at-start=true
quarkus.flyway.baseline-version=0
## DEV Overrides
%dev.quarkus.datasource.db-kind=h2
%dev.quarkus.datasource.username=sa
%dev.quarkus.datasource.password=password
%dev.quarkus.datasource.jdbc.url=jdbc:h2:mem:market;MODE=PostgreSQL;DB_CLOSE_DELAY=-1;INIT=CREATE SCHEMA IF NOT EXISTS STOCK;
%dev.quarkus.datasource.jdbc.max-size=10
%dev.quarkus.flyway.locations=db/migration,db/specific/h2
#%dev.quarkus.flyway.migrate=false
## TEST Overrides
%test.quarkus.datasource.db-kind=h2
%test.quarkus.datasource.username=sa
%test.quarkus.datasource.password=password
%test.quarkus.datasource.jdbc.url=jdbc:h2:mem:market;MODE=PostgreSQL;DB_CLOSE_DELAY=-1;INIT=CREATE SCHEMA IF NOT EXISTS STOCK;
%test.quarkus.datasource.jdbc.max-size=10
%test.quarkus.flyway.locations=db/migration,db/specific/h2
#%test.quarkus.flyway.migrate=false
#JPA 配置
quarkus.hibernate-orm.database.generation=none
quarkus.hibernate-orm.log.sql=false
## DEV Config Overrides
%dev.quarkus.hibernate-orm.database.generation=drop-and-create
#%dev.quarkus.hibernate-orm.database.generation=none
%dev.quarkus.hibernate-orm.log.sql=true

# Logging
quarkus.banner.enabled=true
quarkus.log.level=INFO
quarkus.log.file.enable=true
quarkus.log.file.level=DEBUG
quarkus.log.file.path=/tmp/kys-app.log

## DEV Profile Config Overrides
%dev.quarkus.log.console.color=true
%dev.quarkus.log.console.json=false
%test.quarkus.log.console.json=false

# OpenShift
quarkus.kubernetes-client.trust-certs=true
quarkus.openshift.route.expose=true
quarkus.openshift.labels.generateby=quarkus-plugin

quarkus.openshift.mounts.application-properties-volume.path=/jboss/home/config/application.properties
quarkus.openshift.mounts.application-properties-volume.sub-path=application.properties
quarkus.openshift.config-map-volumes.application-properties-volume.config-map-name=kyd-invest-main-config
quarkus.openshift.config-map-volumes.application-properties-volume.default-mode=0420
quarkus.openshift.route.annotations."haproxy.router.openshift.io/timeout"=60s
quarkus.openshift.labels."kubernetes.io/part-of"=quant-invest
quarkus.openshift.env.vars.TZ=Asia/Shanghai


# Restful Cli
countries-api/mp-rest/url=https://restcountries.com
countries-api/mp-rest/scope=javax.inject.Singleton
countries-api/mp-rest/hostnameVerifier=io.quarkus.restclient.NoopHostnameVerifier
# countries-api/mp-rest/proxyAddress=app-proxy.cgc.com.my:3128


# Test google api since googleapi require httpproxy
# google-api/mp-rest/url=https://www.youtube.com
# google-api/mp-rest/proxyAddress=192.168.2.15:3128
# google-api/mp-rest/connectTimeout=3000
# google-api/mp-rest/readTimeout=3000

product-api/mp-rest/url=http://localhost:8081
product-api/mp-rest/scope=javax.inject.Singleton
product-api/mp-rest/hostnameVerifier=io.quarkus.restclient.NoopHostnameVerifier

# quarkus.tls.trust-all=true

# Quarkus Mail
# quarkus.mailer.auth-methods=DIGEST-MD5 CRAM-SHA256 CRAM-SHA1 CRAM-MD5 PLAIN LOGIN
# quarkus.mailer.from=sqr-umarshabbir@cgc.com.my
# quarkus.mailer.host=smtpmail.cgc.com.my
# quarkus.mailer.port=25
# quarkus.mailer.ssl=false

